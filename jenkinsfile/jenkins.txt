pipeline {
    agent any
    tools {
        maven 'MAVEN_VERSION'
    }
    stages {

        stage('Pool') {
            steps{
                checkout([$class: 'GitSCM',
                branches: [[name: BRANCH]],
                userRemoteConfigs: [[url: 'https://github.com/Storuk/Spring_Api_Advance.git']],
                doGenerateSubmoduleConfigurations: false,
                changelog: false,
                poll: true
                ])
                echo "Pool finished"
            }
        }

        stage('Run-test') {
            steps{
                bat 'mvn spring-boot:stop'
                bat 'mvn test'
                echo "Test runned"
            }
        }

        stage('JaCoCo') {
            steps{
                junit 'target/surefire-reports/**/*xml'
                jacoco()
                echo "JaCoCo coverage done"
            }
        }

        stage('Sonar') {
            steps{
                withCredentials([string(credentialsId: 'sonarLogin', variable: 'sonarLogin')]) {
                    bat 'mvn clean'
                    bat 'mvn verify'
                    bat "mvn sonar:sonar -Dsonar.login=${sonarLogin} -Dsonar.projectName=Epam"
                    echo "Sonar integration finished"
                }
            }
        }

        stage('build') {
            steps{
                bat 'mvn clean'
                bat 'mvn package'
                echo "Build finished"
            }
        }

        stage('deploy') {
            steps{
                withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
                    bat 'mvn spring-boot:start -Dspring-boot.run.arguments=--spring.profiles.active='+PROFILE+' &'
                    echo "Deployed"
                }
            }
        }

        stage('Health Check') {
            steps{
                script {
                    def response = httpRequest (url: 'http://localhost:8080/actuator/health', validResponseCodes: '200')
                    println(response.status)
                }
            }
        }
    }
}