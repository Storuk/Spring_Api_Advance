openapi: 3.0.1
info:
  version: '1.0.0'
  title: REST API Documentation
  description: REST API Documentation
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /tags:
    get:
      tags:
        - tag-controller
      description: Returns all tags
      summary: Returns all tags
      operationId: getAllTags
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
    post:
      tags:
        - tag-controller
      description: Returns created tag
      summary: Returns created tag
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagForPost'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /tags/{id}:
    get:
      tags:
        - tag-controller
      description: Returns tag by id
      summary: Returns tag by id
      operationId: getTagById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
    delete:
      tags:
        - tag-controller
      description: Returns status for deleting tag
      summary: Returns status for deleting tag
      operationId: deleteTag
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  HTTP Status:
                    type: string
                    enum: 
                      - OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /tags/mostly-used-tag:
    get:
      tags:
        - tag-controller
      description: Returns mostly used tag
      summary: Returns mostly used tag
      operationId: getTheMostlyUsedTagInUserOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
  /users:
    get:
      tags:
        - user-controller
      description: Returns all users
      summary: Returns all users
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
  /users/{id}:
    get:
      tags:
        - user-controller
      description: Returns user by id
      summary: Returns all user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /orders:
    get:
      tags:
        - order-controller
      description: Returns all orders
      summary: Returns all orders
      operationId: getAllOrders
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
  /orders/by-user-id/{user_id}:
    get:
      tags:
        - order-controller
      description: Returns order by user id
      summary: Returns order by user id
      operationId: getOrdersByUserId
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /orders/{user_id}/{giftCertificateId}:
    post:
      tags:
        - order-controller
      description: Returns created order
      summary: Returns created order
      operationId: createOrder
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
        - name: giftCertificateId
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /gift-certificates:
    get:
      tags:
        - gift-certificate-controller
      description: Returns all gift certificates
      summary: Returns all gift certificates
      operationId: getAllCertificates
      parameters:
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificates'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
    post:
      tags:
        - gift-certificate-controller
      description: Returns created gift certificate
      summary: Returns created gift certificate
      operationId: createCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateForPostAndUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificate'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /gift-certificates/{id}:
    get:
      tags:
        - gift-certificate-controller
      description: Returns gift certificate by id
      summary: Returns gift certificate by id
      operationId: getGiftCertificateById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificate'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
    delete:
      tags:
        - gift-certificate-controller
      description: Returns status for deleting gift certificate
      summary: Returns status for deleting gift certificate
      operationId: deleteGiftCertificate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  HTTP Status:
                    type: string
                    enum: 
                      - OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
    patch:
      tags:
        - gift-certificate-controller
      description: Returns updated gift certificate
      summary: Returns updated gift certificate
      operationId: updateGiftCertificate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCertificateForPostAndUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificate'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /gift-certificates/update-price/{id}:
    patch:
      tags:
        - gift-certificate-controller
      description: Returns gift certificate with updated price
      summary: Returns gift certificate with updated price
      operationId: updatePrice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              minimum: 1
              type: integer
              format: int32
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificate'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /gift-certificates/update-duration/{id}:
    patch:
      tags:
        - gift-certificate-controller
      description: Returns gift certificate with updated duration
      summary: Returns gift certificate with updated duration
      operationId: updateDuration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              minimum: 1
              type: integer
              format: int32
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificate'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus404'
          description: Item Not Found
  /gift-certificates/get-tag-name:
    get:
      tags:
        - gift-certificate-controller
      description: Returns gift certificates by tag name
      summary: Returns gift certificates by tag name
      operationId: getGiftCertificatesByTagName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificates'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
  /gift-certificates/get-sort-name:
    get:
      tags:
        - gift-certificate-controller
      description: Returns gift certificates sorted by name
      summary: Returns gift certificates sorted by name
      operationId: getGiftCertificatesSortedByName
      parameters:
        - name: sortingType
          in: query
          required: false
          schema:
            type: string
            default: ASC
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificates'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
  /gift-certificates/get-sort-name-date:
    get:
      tags:
        - gift-certificate-controller
      description: Returns gift certificates sorted by name and by date
      summary: Returns gift certificates sorted by name and by date
      operationId: getGiftCertificatesSortedByNameByDate
      parameters:
        - name: sortingTypeName
          in: query
          required: false
          schema:
            type: string
            default: ASC
        - name: sortingTypeDate
          in: query
          required: false
          schema:
            type: string
            default: ASC
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificates'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
  /gift-certificates/get-gift-certificate-description:
    get:
      tags:
        - gift-certificate-controller
      description: Returns gift certificates by part of description
      summary: Returns gift certificates by part of description
      operationId: getGiftCertificatesByPartOfDescription
      parameters:
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificates'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
  /gift-certificates/get-by-tag-names:
    get:
      tags:
        - gift-certificate-controller
      description: Returns gift certificates by tag names
      summary: Returns gift certificates by tag names
      operationId: getGiftCertificatesByTags
      parameters:
        - name: tagNamesSet
          in: query
          required: true
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: page
          in: query
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCertificates'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpStatus400'
          description: Bad Request
components:
  schemas:
          
    TagForPost:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    
    GiftCertificateForPostAndUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          minimum: 1
          type: integer
          format: int32
        duration:
          minimum: 1
          type: integer
          format: int32
        createDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
        tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TagForPost'
            
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
          
    GiftCertificate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          minimum: 1
          type: integer
          format: int32
        duration:
          minimum: 1
          type: integer
          format: int32
        createDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
        tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        _links:
          $ref: '#/components/schemas/Links'
          
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
      required:
        - id
        - name
          
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cost:
          type: integer
          format: int128
        gift-certificate:
          type: array
          description: Order`s gift-certificate
          items:
            $ref: '#/components/schemas/GiftCertificate'
        user:
          type: array
          items:
            $ref: '#/components/schemas/User'
        purchaseDate:
          type: string
          format: date-time
        _links:
          $ref: '#/components/schemas/Links'
      required:
        - id
        - cost
        - gift-certificate
        - purchaseDate
    
    Tags:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        _links:
          $ref: '#/components/schemas/Links'
          
    GiftCertificates:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/GiftCertificate'
        _links:
          $ref: '#/components/schemas/Links'
          
    Users:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        _links:
          $ref: '#/components/schemas/Links'
          
    Orders:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        _links:
          $ref: '#/components/schemas/Links'
          
    HttpStatus400:
      type: object
      properties:
        HTTP Status:
          type: string
          enum:
            - BAD_REQUEST
        response body:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                example: "BAD_REQUEST"
                
    HttpStatus404:
      type: object
      properties:
        HTTP Status:
          type: string
          enum:
            - NOT_FOUND
        response body:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                example: "NOT_FOUND"
                
    Links:
      type: array
      items:
        type: object
        properties:
          rel:
            type: string
          href:
            type: string